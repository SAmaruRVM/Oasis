@model GrupoDisciplinaViewModel
@inject IConfiguration configuration
@{
    var user = await GetUtilizadorLogadoAsync();
    ViewBag.Title = $"{configuration["Projeto:Nome"]} - {Model.Grupo.Nome}";
}



<div class="container-fluid mt-3">
    <button class="btn btn-primary" data-toggle="modal" data-target="#modal-inserir-post">
        <i class="fas fa-plus-square"></i>
        Novo Post
    </button>



@if(User.IsInRole(TipoUtilizador.Professor.ToString()))
{
     <button class="btn btn-primary ml-2" data-toggle="modal" data-target="#modal-inserir-tipo-post">
        <i class="fas fa-plus-square"></i>
        Novo Tipo de Post
    </button>
}

</div>


<hr class="mb-0" />
<div class="row container-fluid">
    <div class="text-center col-9 pt-5">
        <div class="pl-5">
            <div id="container-posts" class="px-5"
                 style="position: fixed; height: 90vh; width: 75%; overflow-y: auto; scrollbar-width: none; ">
<h2 class="text-center">@Model.Grupo.Nome</h2>
                <hr id="hr-container-posts" />
                @if (!(Model.PostsGrupo.Any()))
                {
                    <h3>Ainda não existem posts aqui!</h3>
                }
                else
                {
                    @foreach (Post post in Model.PostsGrupo)
                    {

                        string postGuardado = user.PostsGuardados.Select(pg => pg.PostId)
                                                                 .Contains(post.Id) ? "fas fa-bookmark fa-lg" : "far fa-bookmark fa-lg";

                        <div class="card p-0 mb-4">
                            <div class="card-body px-4 py-0">
                                <div class="d-flex align-items-center">

                                    <h5>
                                        <div class="float-left pt-4">
                                            <span class="badge badge-secondary mr-2">@post.TipoPost.Nome</span>

                                        </div>
                                         <div class="d-flex">
                                                <p class="pt-4">@post.Criador.PrimeiroNome @post.Criador.Apelido</p>
                                        @if (post.Criador.Id == Model.Grupo.ProfessorId)
                                        {
                                           
                                                <span class="badge" style="color:darkkhaki; font-size: 12px; height: 19px; width: 25px; margin-top:16px; margin-left:-7px;">
                                                    <i class="fas fa-crown"></i>
                                                </span>
                                           
                                        }
                                         </div>
                                    </h5>
                                    <div class="dropdown ml-auto">
                                        <button class="btn btn-link dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            Opções
                                        </button>
                                        <div class="dropdown-menu p-2" aria-labelledby="dropdownMenuButton">
                                            <a asp-action="Post" asp-controller="Escola" asp-area="" asp-route-idPost="@post.Id" class="btn btn-warning btn-block">
                                                Detalhes
                                            </a>

                                            @if (post.Criador.Id == user.Id)
                                            {
                                                <button type="button" data-id-post-eliminar="@post.Id" class="btn btn-danger btn-block">
                                                    Eliminar
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>


                                <hr />
                                <div class="text-left">
                                    <h5 class="card-subtitle text-muted my-2 ">@post.Titulo</h5>

                                    @* <svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%"
                                        height="200"
                                        aria-label="Placeholder: Image cap" focusable="false" role="img"
                                        preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180"
                                        style="font-size:1.125rem;text-anchor:middle">
                                        <rect width="100%" height="100%" fill="#868e96"></rect>
                                        <text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text>
                                        </svg> *@

                                    <p class="text-left">
                                        @post.Conteudo
                                    </p>

                                </div>
                            </div>



                            <div class="card-body d-flex align-self-start mb-2 pb-0 w-100">
                                <div class="dropdown mr-3">
                                    <a data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                        @{
                                            var postGostado = user.PostsGostados.SingleOrDefault(p => p.PostId == post.Id);
                                        }

                                        @if(postGostado is not null) 
                                        {
                                            <img data-id-icone-reacao style="width:20px;height:20px;" src="~/@postGostado.Reacao.Icone" />
                                        }
                                        else {
                                        <i data-id-icone-reacao class="far fa-heart fa-lg"></i>
                                        }
                                    </a>
                                    <ul class="dropdown-menu">
                                        @foreach (Reacao reacao in Model.Reacoes)
                                        {
                                            <li>
                                                @{
                                                    var classesCss = "bg-secondary text-white";

                                                    var userReagiuAEstePostTuple = user.PostsGostados.Select(postGostado => (postId: postGostado.PostId, reacaoId: postGostado.ReacaoId));

                                                    var userReagiuAEstePost = userReagiuAEstePostTuple.SingleOrDefault(pu => pu.postId == post.Id);

                                                }
                                                @if (userReagiuAEstePost != default(ValueTuple<int, int>) && userReagiuAEstePost.reacaoId == reacao.Id)
                                                {
                                                    <button type="button" data-id-reacao="@reacao.Id" data-id-post-reacao="@post.Id" class="dropdown-item @classesCss">
                                                        <img style="width:20px;height:20px;" src="~/@reacao.Icone" />
                                                        @reacao.Titulo
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button" data-id-reacao="@reacao.Id" data-id-post-reacao="@post.Id" class="dropdown-item">
                                                        <img style="width:20px;height:20px;" src="~/@reacao.Icone" />
                                                        @reacao.Titulo
                                                    </button>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </div>
                                <div class="p-0 mr-2">
                                    <p data-id-estatisticas-post>@post.UtilizadoresQueGostaram.Count() reações e @post.Comentarios.Count() comentários</p>
                                </div>
                                <div>
                                    <button type="button" data-mostrar-comentario="@post.Id" class="btn btn-link p-0">Comentar</button>
                                </div>
                                <div class="ml-auto">
                                    <button type="button" data-id-post-guardar="@post.Id" class="btn btn-link">
                                        <i class="@postGuardado"></i>
                                    </button>
                                </div>
                            </div>


                            <form id=@string.Format("form-inserir-comentario-post{0}", post.Id) asp-action="InserirComentarioPost" asp-controller="Escola" asp-area=""
                                  asp-antiforgery="true" data-ajax="true" data-ajax-method="POST"
                                  data-ajax-success="insercaoComentarioPost"
                                  data-ajax-loading="#loading-icon-atualizar-descricao-grupo">
                                <div class="form-group m-3 d-none" id=@string.Format("comentario{0}", @post.Id)>
                                    <textarea class="form-control" rows="2" name="comentario" placeholder="O teu comentário..."></textarea>
                                 
                                    <input type="hidden" name="idPost" value="@post.Id" />

                                    <button type="submit" class="btn btn-primary my-2 float-right" onclick="enviarComentario(this)">
                                        Enviar
                                    </button>
                                </div>
                            </form>

                            <div class="card-footer text-muted">
                                @post.DataCriacao.Day de
                                @post.DataCriacao.ToString("MMMM",
                        System.Globalization.CultureInfo.CreateSpecificCulture("pt-PT")),
                                @post.DataCriacao.Year
                                às @post.DataCriacao.Hour:@post.DataCriacao.Minute
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>


</div>
@section Scripts {
    <partial name="~/Views/Shared/_Validacoes.cshtml" />
    <partial name="~/Views/Shared/_Ajax.cshtml" />
    <script>

        let botaoEnviarComentario = undefined;
        function enviarComentario(btnComentario) 
        {
            botaoEnviarComentario = btnComentario;
        }
        

        function insercaoComentarioPost(respostaAjax)
        {
            if(!(respostaAjax.ajax.ocorreuAlgumErro))
                {
                    botaoEnviarComentario.parentElement.querySelector('textarea').value = '';
                    botaoEnviarComentario.parentElement.parentElement.parentElement.querySelector('p[data-id-estatisticas-post]').innerText = `${respostaAjax.estatisticas.numeroReacoes} reações e ${respostaAjax.estatisticas.numeroComentarios} comentários`;
                }
                ajaxCompleto(respostaAjax.ajax);
        }


                                                        function insercaoPost(respostaAjax) {
                                                            if (!(respostaAjax.ajax.ocorreuAlgumErro)) {
                                                                document.getElementById('form-adicionar-post').reset();
                $('#modal-inserir-post').modal('hide');
                                                                const hrContainerPost = document.getElementById('hr-container-posts');

             
                location.reload();
            }
            ajaxCompleto(respostaAjax.ajax);
        }


        // comentarios

        const btnsAbrirComentarios = document.querySelectorAll('button[data-mostrar-comentario]');
        btnsAbrirComentarios.forEach(btn => btn.addEventListener('click', () =>
        {
            document.getElementById(`comentario${btn.getAttribute('data-mostrar-comentario')}`).classList.toggle('d-none');
        }));




        // Guardar Posts
          const btnsGuardarPosts = document.querySelectorAll('button[data-id-post-guardar]');



        btnsGuardarPosts.forEach(btn => btn.addEventListener('click', async () => {
            const resultadoAjax = await guardarPost(btn.getAttribute('data-id-post-guardar'));
            ajaxCompleto(resultadoAjax);


            btn.innerHTML = (btn.innerHTML.trim() === '<i class="far fa-bookmark fa-lg"></i>' ? '<i class="fas fa-bookmark fa-lg"></i>' : '<i class="far fa-bookmark fa-lg"></i>');
        }));

        async function guardarPost(idPost)
        {
                  const formData = new FormData();
            formData.append('idPost', idPost);
            return await fetch(`${location.protocol}//${location.hostname}:${location.port}/escola/guardarPost`,
                {
                    method: 'POST',
                    body: formData
                }).then(resposta => resposta.json());
        }







        // Eliminar Posts
          const btnsEliminarPosts = document.querySelectorAll('button[data-id-post-eliminar]');


        btnsEliminarPosts.forEach(btn => btn.addEventListener('click', async () => {
            const resultadoAjax = await eliminarPost(btn.getAttribute('data-id-post-eliminar'));
            ajaxCompleto(resultadoAjax);

            if(!(resultadoAjax.ocorreuAlgumErro))
            {
                btn.parentElement().parentElement().parentElement().parentElement().remove();
            }
        }));

        async function eliminarPost(idPost)
        {
                  const formData = new FormData();
            formData.append('idPost', idPost);
            return await fetch(`${location.protocol}//${location.hostname}:${location.port}/escola/eliminarPost`,
                {
                    method: 'POST',
                    body: formData
                }).then(resposta => resposta.json());
        }



        function insercaoTipoPost(respostaAjax) 
        {
            if(!(respostaAjax.ocorreuAlgumErro))
            {
                $('#modal-inserir-tipo-post').modal('hide');
                document.getElementById('form-adicionar-tipo-post').reset();
            }
            ajaxCompleto(respostaAjax);
        }






        // Reacoes
        const btnsReacoes = document.querySelectorAll('button[data-id-reacao]');


        btnsReacoes.forEach(btn => btn.addEventListener('click', async () => {

            const btnReacaoSelecionada = btn.parentElement.parentElement.querySelector('button.bg-secondary[data-id-reacao]');


            let removerAcao = btnReacaoSelecionada === btn;

            const respostaAjax = await marcarPostComReacao(!(removerAcao) ? btn.getAttribute('data-id-reacao') : null, btn.getAttribute('data-id-post-reacao'));

            if (respostaAjax.ajax.ocorreuAlgumErro) {
                ajaxCompleto(respostaAjax);
                return;
            }

            btn.parentElement.parentElement.parentElement.parentElement.querySelector('p[data-id-estatisticas-post]').innerText = `${respostaAjax.estatisticas.numeroReacoes} reações e ${respostaAjax.estatisticas.numeroComentarios} comentários`;


            const containerIconeReacao = btn.parentElement.parentElement.parentElement;
            const htmlElementoIcone = containerIconeReacao.querySelector('*[data-id-icone-reacao]');

            if(htmlElementoIcone.tagName === 'I')
            {
                htmlElementoIcone.parentElement.innerHTML = `<img data-id-icone-reacao style="width:20px;height:20px;" src="${respostaAjax.iconeReacao}" />`;
            }
            else 
            {
                htmlElementoIcone.src = respostaAjax.iconeReacao;
            }

            btnReacaoSelecionada?.classList.remove('bg-secondary', 'text-white');
           
            // atualizar UI com a devida reacao escolhida
            if(!(removerAcao))
            {
              btn.classList.add('bg-secondary', 'text-white');
            }
            else 
            {
                htmlElementoIcone.parentElement.innerHTML = ' <i data-id-icone-reacao class="far fa-heart fa-lg"></i>';
            }
          
           // btnTemaSelecionado.classList.remove('bg-secondary', 'text-white');
            //btnTemaSelecionado = btn;
        }));

        async function marcarPostComReacao(idReacao, idPost)
        {
            const formData = new FormData();
            formData.append('idPost', idPost);
            formData.append('idReacao', idReacao);

            return await fetch(`${location.protocol}//${location.hostname}:${location.port}/escola/marcarPostComReacao`, {
                method: 'POST',
                body: formData
            }).then(resposta => resposta.json());
        }
    </script>
}



<!-- Modals -->
<!-- Modal Novo Post -->
<div class="modal fade" id="modal-inserir-post" tabindex="-1" role="dialog"
     aria-labelledby="modal-inserir-post-titulo" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-inserir-post-titulo">Post</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-adicionar-post" asp-action="AdicionarPost"
                      asp-controller="Escola" asp-area="" asp-antiforgery="true" data-ajax="true"
                      data-ajax-method="POST" data-ajax-success="insercaoPost"
                      data-ajax-loading="#loading-icon-insercao-post">

                    <div class="form-group mb-3">
                        <label asp-for="PostInserirViewModel.Post.Titulo"></label>
                        <input class="form-control" asp-for="PostInserirViewModel.Post.Titulo" />
                        <span class="text-danger text-center"
                              asp-validation-for="PostInserirViewModel.Post.Titulo"></span>
                    </div>


                    <div class="form-group mb-3">
                        <label asp-for="PostInserirViewModel.Post.Conteudo"></label>
                        <textarea class="form-control" asp-for="PostInserirViewModel.Post.Conteudo" rows="2"></textarea>
                        <span class="text-danger text-center"
                              asp-validation-for="PostInserirViewModel.Post.Conteudo"></span>
                    </div>

                    <label asp-for="PostInserirViewModel.Post.TipoPostId">Que tipo de post achas que se enquadra com aquilo que pretendes partilhar com os teus colegas?</label>
                    <select class="wide mb-3" asp-for="PostInserirViewModel.Post.TipoPostId" asp-items="@Model.TiposPostDropdownList">
                        <option selected disabled value="0">-- Selecione o tipo de post --</option>
                    </select>
                    <span class="text-danger text-center" asp-validation-for="PostInserirViewModel.Post.TipoPostId"></span>

                    <input asp-for="PostInserirViewModel.Post.ApplicationUserId" value="@user.Id" type="hidden" />
                    <input asp-for="PostInserirViewModel.Post.GrupoId" value="@Model.Grupo.Id" type="hidden" />
                    <div class="font-weight-bold">
                        <button type="submit" class="btn btn-primary btn-block mt-3">
                            <i id="loading-icon-insercao-post" style="display: none;"
                               class="fas fa-spinner fa-spin"></i>
                            Inserir post
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>






<!-- Modal Novo Tipo Post -->
<div class="modal fade" id="modal-inserir-tipo-post" tabindex="-1" role="dialog"
     aria-labelledby="modal-inserir-tipo-post-titulo" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-inserir-tipo-post-titulo">Tipo de Post</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-adicionar-tipo-post" asp-action="AdicionarTipoPost"
                      asp-controller="Escola" asp-area="" asp-antiforgery="true" data-ajax="true"
                      data-ajax-method="POST" data-ajax-success="insercaoTipoPost"
                      data-ajax-loading="#loading-icon-insercao-tipo-post">

                    <div class="form-group mb-3">
                        <label asp-for="TipoPostInserir.Nome"></label>
                        <input class="form-control" asp-for="TipoPostInserir.Nome" />
                        <span class="text-danger text-center"
                              asp-validation-for="TipoPostInserir.Nome"></span>
                    </div>

                    <input asp-for="TipoPostInserir.GrupoId" type="hidden" value="@Model.Grupo.Id"/>


                    <div class="font-weight-bold">
                        <button type="submit" class="btn btn-primary btn-block mt-3">
                            <i id="loading-icon-insercao-tipo-post" style="display: none;"
                               class="fas fa-spinner fa-spin"></i>
                            Inserir tipo de post
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>






<!-- Modal Definições Grupo -->
<div class="modal fade" id="modal-definicoes-grupo" tabindex="-1" role="dialog"
     aria-labelledby="modal-definicoes-grupo-titulo" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-definicoes-grupo-titulo">Definições do grupo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>
