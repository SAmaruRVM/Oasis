// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oasis.Dados;

namespace Oasis.Dados.Migrations
{
    [DbContext(typeof(OasisContext))]
    partial class OasisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("TiposUtilizador");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "b1fcc05b-7f11-4e97-9f54-1da57f42137d",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "8693c4e9-d9fc-46be-9f94-e64efa824c0b",
                            Name = "Diretor",
                            NormalizedName = "DIRETOR"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "3a43383b-9510-43fb-93dd-7a7ae828ca1a",
                            Name = "Professor",
                            NormalizedName = "PROFESSOR"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = "9feadc7f-f809-454a-8f8a-014dcbb2edf5",
                            Name = "Aluno",
                            NormalizedName = "ALUNO"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DataUltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoPerfil")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImagemPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TemaId");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.ComentarioPostUtilizador", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("ComentariosPostsUtilizadores");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailContactante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.DirecaoEscola", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationUserId", "EscolaId");

                    b.HasIndex("EscolaId");

                    b.ToTable("DirecoesEscolas");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EscolaId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoTelefonico")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Banner")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.GrupoAluno", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationUserId", "GrupoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("GruposAlunos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("FoiVista")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PaginaPrincipal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConteudoHtml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId")
                        .IsUnique();

                    b.ToTable("ConteudoPaginaPrincipalEscolas");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<byte[]>("Ficheiro")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipoPostId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("TipoPostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PostGostoUtilizador", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("ReacaoId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "PostId", "ReacaoId");

                    b.HasIndex("PostId");

                    b.HasIndex("ReacaoId");

                    b.ToTable("PostsGostosUtilizadores");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PostUtilizadorGuardado", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("PostsUtilizadoresGuardados");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Reacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CssClassIcone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Reacoes");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.RequisicaoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRequisicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("EquipamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstaAprovado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("RequisicaoEquipamentos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.RespostaContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactoId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ContactoId")
                        .IsUnique();

                    b.ToTable("RespostasContactos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkCdn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Temas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LinkCdn = "https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/yeti/bootstrap.min.css",
                            Nome = "Yeti"
                        },
                        new
                        {
                            Id = 2,
                            LinkCdn = "https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/darkly/bootstrap.min.css",
                            Nome = "Darkly"
                        },
                        new
                        {
                            Id = 3,
                            LinkCdn = "https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/minty/bootstrap.min.css",
                            Nome = "Minty"
                        },
                        new
                        {
                            Id = 4,
                            LinkCdn = "https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/sketchy/bootstrap.min.css",
                            Nome = "Sketchy"
                        },
                        new
                        {
                            Id = 5,
                            LinkCdn = "https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/sandstone/bootstrap.min.css",
                            Nome = "Sandstone"
                        });
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.TipoPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("TiposPosts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.ApplicationUser", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Tema", "Tema")
                        .WithMany("Utilizadores")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.ComentarioPostUtilizador", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Utilizador")
                        .WithMany("Comentarios")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Post", "Post")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.DirecaoEscola", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Diretor")
                        .WithMany("EscolasEmQueFazParteDaDirecao")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Escola", "Escola")
                        .WithMany("Diretores")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Diretor");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Disciplina", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "CriadorDirecao")
                        .WithMany("DisciplinasCriadas")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Escola", "Escola")
                        .WithMany("Disciplinas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriadorDirecao");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Equipamento", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Escola", "Escola")
                        .WithMany("Equipamentos")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Grupo", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Disciplina", "Disciplina")
                        .WithMany("Grupos")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Professor")
                        .WithMany("GruposOndeEnsina")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.GrupoAluno", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Aluno")
                        .WithMany("GruposOndeTemAulas")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Grupo", "Grupo")
                        .WithMany("Alunos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Notificacao", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Utilizador")
                        .WithMany("Notificacoes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PaginaPrincipal", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Escola", "Escola")
                        .WithOne("ConteudoPaginaPrincipal")
                        .HasForeignKey("Oasis.Dominio.Entidades.PaginaPrincipal", "EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Post", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Criador")
                        .WithMany("PostsCriados")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.TipoPost", "TipoPost")
                        .WithMany("Posts")
                        .HasForeignKey("TipoPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criador");

                    b.Navigation("TipoPost");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PostGostoUtilizador", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Utilizador")
                        .WithMany("PostsGostados")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Post", "Post")
                        .WithMany("UtilizadoresQueGostaram")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Reacao", "Reacao")
                        .WithMany("PostsQueFizeramUsoDestaReacao")
                        .HasForeignKey("ReacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Reacao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.PostUtilizadorGuardado", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Utilizador")
                        .WithMany("PostsGuardados")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Post", "Post")
                        .WithMany("UtilizadoresQueGuardaram")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Report", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Aluno")
                        .WithMany("ReportsAluno")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Professor")
                        .WithMany("ReportsProfessor")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.RequisicaoEquipamento", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.ApplicationUser", "Aluno")
                        .WithMany("RequisicoesEquipamento")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oasis.Dominio.Entidades.Equipamento", "Equipamento")
                        .WithMany("Requisicoes")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.RespostaContacto", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Contacto", "Contacto")
                        .WithOne("RespostaContacto")
                        .HasForeignKey("Oasis.Dominio.Entidades.RespostaContacto", "ContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.TipoPost", b =>
                {
                    b.HasOne("Oasis.Dominio.Entidades.Grupo", "Grupo")
                        .WithMany("Flairs")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.ApplicationUser", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("DisciplinasCriadas");

                    b.Navigation("EscolasEmQueFazParteDaDirecao");

                    b.Navigation("GruposOndeEnsina");

                    b.Navigation("GruposOndeTemAulas");

                    b.Navigation("Notificacoes");

                    b.Navigation("PostsCriados");

                    b.Navigation("PostsGostados");

                    b.Navigation("PostsGuardados");

                    b.Navigation("ReportsAluno");

                    b.Navigation("ReportsProfessor");

                    b.Navigation("RequisicoesEquipamento");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Contacto", b =>
                {
                    b.Navigation("RespostaContacto");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Disciplina", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Equipamento", b =>
                {
                    b.Navigation("Requisicoes");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Escola", b =>
                {
                    b.Navigation("ConteudoPaginaPrincipal");

                    b.Navigation("Diretores");

                    b.Navigation("Disciplinas");

                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Grupo", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Flairs");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Post", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("UtilizadoresQueGostaram");

                    b.Navigation("UtilizadoresQueGuardaram");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Reacao", b =>
                {
                    b.Navigation("PostsQueFizeramUsoDestaReacao");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.Tema", b =>
                {
                    b.Navigation("Utilizadores");
                });

            modelBuilder.Entity("Oasis.Dominio.Entidades.TipoPost", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
